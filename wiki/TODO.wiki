== TODO list of features ==

Here is a list of wishes of features.

JavaMelody is opensource:
Priorities and todos may change any time.
There is no promise of dates or that a particular feature will ever be done.

Follow JRobin issues: 
  * ~~[http://issues.opennms.org/browse/JRB-20],~~ (done)
  * [http://sourceforge.net/tracker/?func=detail&aid=3403733&group_id=82668&atid=566807],
  * and [http://sourceforge.net/mailarchive/message.php?msg_id=28038427] (submit 2 issues in JIRA if necessary)

And
  # Fix [http://code.google.com/p/javamelody/issues/list issues]
  # More unit tests
  # More integration tests (all JDK/JRE and versions, all OS, all application servers and versions, all navigators)
  # *Translations* (Italian, Spanish...)
  # ~~Add an action for threads dump as text format~~ (done)
  # ~~In the collector server, refuse to add twice one instance of an application (for example, individually and then in a cluster), because it would not work~~ (done)
  # If the transaction isolation level is not read committed (unusual), display a warning about slowness or bugs
  # ~~Add pdf/xml/json reports for the counter summary per class~~ (done)
  # Display the 100 latest slow requests for each counter (duration at severe level when they were executed), including user and http parameters
  # Sampling of thread stack traces to detect cpu hotspots (similarly to VisuaVM sampler but with a lower rate and with no configuration). The packages java, javax, sun, com.sun should be excluded. (And for memory hotspots?). See issue 149.
  # ~~In the collector server, do not display all the applications at the top if there are more than 10 of them, and display them with a show and collapse link~~. (done)
  # Cannot remove in the GUI an application from the collector server when the application is no longer using javamelody. When trying to select it, the collector server is showing an error 500 with the message "Data unavailable for the application". (Meanwhile, it is possible to remove the application directly from the applications.properties file in the temp directory.)
  # Inline drill-down in child requests, for example in the detail of a request
  # Add a pdf report of the detail of a request
  # Add the 90th or 95th percentile in zoomed graphics, besides the mean (org.jrobin.data.DataProcessor.getPercentile)
  # ~~Stack-traces: Link to open a popup with the stack-trace (in addition to the tooltip)~~ (canceled, there is an action "Dump threads as text" now)
  # Monitor incoming or outgoing web-services when using Apache CXF. See [http://cxf.apache.org/docs/interceptors.html Interceptors] or [http://code.google.com/p/xebia-france/wiki/CxfMonitoring#Spring_configuration this one] (issue 228)
  # ~~Test the compatibility or the non-compatibility with Quartz 2.0~~ (done, see issue 121)
  # ~~Test the monitoring of sql requests with a datasource from jndi in *[https://groups.google.com/group/javamelody/t/39da9d1d1fe5f275 Glassfish 3]*~~ (done, see issue 138)
  # Test the monitoring of sql requests with a datasource from jndi in *Resin*
  # ~~Test the jndi report in *Websphere*~~ (done)
  # Option in the UI to change from cumulative times (http times include sql) to *non-cumulative times*, via a link and a persistent http cookie or at least a parameter (from user group)
  # ~~Downloadable *demo* of JavaMelody in [http://java.sun.com/developer/releases/petstore/ java pet store] with step by step instruction to install in glassfish or [http://static.springsource.org/docs/petclinic.html Spring pet clinic] in tomcat for example~~ (done, there is an [Demo online demo].)
  # Basic server monitoring: in [https://code.google.com/p/javamelody/downloads/list downloads], provide a simple war file to monitor only an application server (cpu, memory, system informations, mbeans, threads) without monitoring any application (http requests, http sessions, etc)
  # Cloud Watch metrics for an application in Amazon EC2, possibly by using Beans Talk.
  # ~~Statistics of JSF actions like for Struts actions~~ (done)
  # ~~Possibly document the external API: [ReleaseNotes#1.24.0 lastValue and jmxValue] ; and also xml and json format on some pages~~ (done)
  # Possibly document the rewrap-datasources parameter for Tomcat and Jonas
  # Format the sql requests before display in the sql statistics
  # Add a button to kill a system process and its children in the process list?
  # Monitoring of [http://blogs.sun.com/alanb/entry/monitoring_direct_buffers nio buffers] if Java 7 and of the new [http://download.oracle.com/javase/7/docs/jre/api/management/extension/com/sun/management/OperatingSystemMXBean.html#getSystemCpuLoad%28%29 % system cpu] if Java 7 and Oracle JDK (in other charts?). getSystemCpuLoad may not be implemented on Windows (returns -1) and getProcessCpuLoad is probably useless given that there is already the "% cpu" for the process.
  # Add a view with the classloader hierarchy
  # Simplify UI with [http://groups.google.fr/group/javamelody/browse_thread/thread/d4ac1b796e366852 user feedback]
  # Details on GC types and on cpu per gc type (from user group)
  # Display of graphs with *percentages of navigators, of OS, of countries/languages* based on user-agent and main locale, with jrobin and percentage one above the others up to 100%, and idem with types of requests (get,post,ajax,gwt or perhaps select/update/insert/delete)
  # *Alerts* based on thresholds, with mails to administrators
  # ~~*CSV* exports of tables~~ (done in the rich desktop UI. Note that there are also [ExternalAPI XML and JSON] exports possible in the web UI)
  # (_started_) Rich *desktop UI* able to connect to multiple servers via CollectorServer and to centralized collect servers, with [http://java.sun.com/docs/books/tutorial/uiswing/ swing] and [http://java.sun.com/javase/technologies/desktop/javawebstart/index.jsp java web start]
  # *[http://munin.projects.linpro.no/ Munin]/[http://www.nagios.org/ Nagios]/[http://www.zabbix.com Zabbix]* plugin to display some graphs in those tools
  # ~~Add the Nagios plugin by Shawn Bower in the user guide in addition to the [ExternalAPI#PNG_and_lastValue External API], if it works well.~~ (done)
  # When monitoring-spring.xml is used (or monitoring-spring-aspectj.xml), add a page to display beans in the Spring context by adding a bean which implements ApplicationContextAware
  # Add a plugin interceptor to monitor sql requests in mybatis when no other sql monitoring, such as a datasource from JNDI, is used
  # Play framework, see [http://stackoverflow.com/questions/7409112/javamelody-and-play-framework stackoverflow]
  # Extract informations from bonecp such as max connections like from dbcp
  # Custom processing in counters's events (issue 173)
  # Possibility to add graphics based on configurable MBeans values (such as business metrics)
  # In the list of dependencies of the webapp, add a link to a new page to display for each dependency the name with a link to the dependency's url, Maven ID with groupId:artifactId:version, the name of the license with a link to its URL (like Jenkins)
  # In the list of Quartz jobs, if a job is an InterruptableJob and is currently executing, display a red cross next to the progress bar (like Jenkins jobs) to be able to [http://grepcode.com/file/repo1.maven.org/maven2/org.quartz-scheduler/quartz/2.1.3/org/quartz/Scheduler.java#Scheduler.interrupt%28org.quartz.JobKey%29 interrupt] the job in [http://code.google.com/p/javamelody/source/browse/trunk/javamelody-core/src/main/java/net/bull/javamelody/QuartzAdapter.java QuartzAdapter] and [http://code.google.com/p/javamelody/source/browse/trunk/javamelody-core/src/main/quartz/net/bull/javamelody/Quartz2Adapter.java Quartz2Adapter].
  # Having some monitoring is good but sometimes not enough or too late in the development cycle (and sending alerts are not better for developers). A parameter such as "max-sql-hits" could be added for dev environments, for continuous integration tests or for QA servers, in order to enable a hard rule: no more than X executions of SQL requests per service execution or per http request execution, otherwise throw an exception immediately like a blocking issue. A good practice would be X=10, or X=20 for example can be chosen to be "comprehensive" for some time.
  # If the "sql-transform-pattern" parameter is used, the sql requests may contain the '$' character, and then the execution plan (with Oracle) does not work on these requests :-(
  # Check with a file if 2 instances use the same storage directory (and warn about data corruption)
  # Add a pdf report for the JNDI bindings
  # Add a Table Of Contents with links at the top of the main report. In order to not take much vertical space, it can be displayed hovering, or in a combo box, or in a popup...
  # Maven:
    # ~~Why *maven* waits forever to build in Eclipse when I have forgotten to change the proxy in my settings.xml between my work day and my work night ? and why can't I cancel the waiting build ?~~ (I don't have to use a proxy at the moment)
    # ~~And why some maven plugins are sometimes years late?~~ (obsolete, olamy took care of this)
    # ~~Publish JavaMelody in maven central repository (seems not doable without jrobin in central repo and without renaming package to googlecode)~~ (done, it is in maven central now.)
  # More to come...